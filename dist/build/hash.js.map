{"version":3,"sources":["../../src/hash.ts"],"names":[],"mappings":";AAAA,IAAY,EAAE,WAAM,IAAI,CAAC,CAAA;AACzB,IAAY,MAAM,WAAM,QAAQ,CAAC,CAAA;AAEjC;IAGI,cAAmB,SAAkB,EAAS,QAAkB;QAA7C,cAAS,GAAT,SAAS,CAAS;QAAS,aAAQ,GAAR,QAAQ,CAAU;QAC5D,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QACzC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,IAAI,KAAK,CAAC,CAAC;IAC7C,CAAC;IAED,mBAAI,GAAJ,UAAK,QAAiB;QAAtB,iBAYC;QAXG,IAAI,MAAM,GAAG,EAAE,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAC3C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEvB,IAAM,OAAO,GAAG,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACxC,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE;gBACb,KAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;gBAChB,OAAO,CAAC,KAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;YAC9B,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,OAAO,CAAC;IACnB,CAAC;IACL,WAAC;AAAD,CArBA,AAqBC,IAAA;AArBD;sBAqBC,CAAA","file":"hash.js","sourcesContent":["import * as fs from 'fs';\r\nimport * as crypto from 'crypto';\r\n\r\nexport default class Hash {\r\n    private hash : any;\r\n\r\n    constructor(public algorithm : string, public encoding? : string){\r\n        this.hash = crypto.createHash(algorithm);\r\n        this.hash.setEncoding(encoding || 'hex');\r\n    }\r\n\r\n    read(filePath : string){\r\n        let reader = fs.createReadStream(filePath);\r\n        reader.pipe(this.hash);\r\n\r\n        const promise = new Promise((resolve, reject) => {\r\n            reader.on('end', () => {\r\n                this.hash.end();\r\n                resolve(this.hash.read());\r\n            });\r\n        });\r\n\r\n        return promise;\r\n    }\r\n}\r\n"]}